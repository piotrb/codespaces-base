name: build-image
on:
  push:
    branches:
      - '*'
      # - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      docker-repo: "ghcr.io/${{ github.repository }}"

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: "${{ github.repository }}"

      - name: Build and push (pre-main)
        uses: docker/build-push-action@v2
        env:
          stage: pre-main
        with:
          context: .
          target: ${{ env.stage }}
          tags: "${{ env.docker-repo }}:${{ env.stage }}"
          push: true
          cache-from: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache
          cache-to: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache,mode=max
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push (ruby-build)
        uses: docker/build-push-action@v2
        env:
          stage: ruby-build
        with:
          context: .
          target: ${{ env.stage }}
          tags: "${{ env.docker-repo }}:${{ env.stage }}"
          push: true
          cache-from: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache
          cache-to: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache,mode=max
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push (node-build)
        uses: docker/build-push-action@v2
        env:
          stage: node-build
        with:
          context: .
          target: ${{ env.stage }}
          tags: "${{ env.docker-repo }}:${{ env.stage }}"
          push: true
          cache-from: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache
          cache-to: type=registry,ref=${{ env.docker-repo }}:${{ env.stage }}-cache,mode=max
          labels: ${{ steps.meta.outputs.labels }}
